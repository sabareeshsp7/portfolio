---
// About section data
const aboutData = {
  title: "About Me",
  subtitle: "Engineering Student & AI/ML Enthusiast",
  description: "I'm passionate about bridging the gap between theoretical knowledge and practical application in AI/ML and software development.",
  highlights: [
    {
      icon: "üéì",
      title: "Engineering Student",
      description: "Currently pursuing my engineering degree with a focus on computer science and artificial intelligence"
    },
    {
      icon: "ü§ñ", 
      title: "AI/ML Enthusiast",
      description: "Deeply interested in machine learning, neural networks, and building intelligent systems"
    },
    {
      icon: "üå±",
      title: "Self-Taught Developer",
      description: "Continuously learning and expanding my skills through hands-on projects and open-source contributions"
    },
    {
      icon: "üöÄ",
      title: "Innovation Focused",
      description: "Always exploring new technologies and methodologies to solve complex problems"
    }
  ],
  skills: {
    "AI/ML": ["Python", "TensorFlow", "PyTorch", "Scikit-learn", "Pandas", "NumPy"],
    "Web Development": ["React", "Node.js", "Astro", "Tailwind CSS", "TypeScript"],
    "Tools & Technologies": ["Git", "Docker", "Linux", "VS Code", "Jupyter Notebooks"]
  }
};
---

<section id="about" class="py-20 px-8 bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900">
  <div class="max-w-6xl mx-auto">
    <!-- Section Header -->
    <div class="text-center mb-16">
      <h2 class="text-4xl md:text-5xl font-black text-white mb-4">
        <span class="bg-gradient-to-r from-blue-400 via-purple-500 to-pink-500 bg-clip-text text-transparent">
          {aboutData.title}
        </span>
      </h2>
      <p class="text-xl text-purple-300 font-semibold mb-4">{aboutData.subtitle}</p>
      <p class="text-lg text-gray-300 max-w-3xl mx-auto leading-relaxed">
        {aboutData.description}
      </p>
    </div>

    <!-- Highlights Grid -->
    <div class="grid md:grid-cols-2 lg:grid-cols-4 gap-6 mb-16">
      {aboutData.highlights.map((highlight, index) => (
        <div 
          class="group bg-gradient-to-br from-gray-800/50 to-gray-900/50 p-6 rounded-xl border border-gray-700 hover:border-purple-500/50 transition-all duration-300 hover:scale-105 hover:shadow-xl backdrop-blur-sm"
          style={`animation-delay: ${index * 0.1}s`}
        >
          <div class="text-4xl mb-4 group-hover:scale-110 transition-transform duration-300">
            {highlight.icon}
          </div>
          <h3 class="text-lg font-bold text-white mb-2 group-hover:text-purple-300 transition-colors">
            {highlight.title}
          </h3>
          <p class="text-gray-400 text-sm leading-relaxed group-hover:text-gray-300 transition-colors">
            {highlight.description}
          </p>
        </div>
      ))}
    </div>

    <!-- Skills Section -->
    <div class="bg-gradient-to-r from-gray-800/30 to-gray-900/30 rounded-2xl p-8 border border-gray-700 backdrop-blur-sm">
      <h3 class="text-2xl font-bold text-white mb-8 text-center">
        üõ†Ô∏è Technical Skills
      </h3>
      
      <div class="grid md:grid-cols-3 gap-8">
        {Object.entries(aboutData.skills).map(([category, skillList]) => (
          <div class="text-center">
            <h4 class="text-lg font-semibold text-purple-300 mb-4">{category}</h4>
            <div class="flex flex-wrap justify-center gap-2">
              {skillList.map((skill) => (
                <span class="px-3 py-1 bg-gradient-to-r from-blue-600/20 to-purple-600/20 text-gray-300 rounded-full text-sm font-medium border border-gray-600 hover:border-purple-500 hover:text-white transition-all duration-300 cursor-default">
                  {skill}
                </span>
              ))}
            </div>
          </div>
        ))}
      </div>
    </div>

    <!-- Call to Action -->
    <div class="text-center mt-12">
      <p class="text-gray-400 mb-6">
        ‚ú® Ready to see what I've been building?
      </p>
      <button 
        onclick="document.getElementById('projects').scrollIntoView({ behavior: 'smooth' })"
        class="bg-gradient-to-r from-blue-600 via-purple-600 to-pink-600 hover:from-blue-700 hover:via-purple-700 hover:to-pink-700 text-white font-bold py-3 px-8 rounded-full transition-all duration-300 hover:scale-105 hover:shadow-xl"
      >
        <span class="flex items-center gap-2">
          View My Projects
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
          </svg>
        </span>
      </button>
    </div>
  </div>
</section>

<style>
  /* Animate elements on scroll */
  .group {
    opacity: 0;
    transform: translateY(30px);
    animation: fadeInUp 0.8s ease-out forwards;
  }
  
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  /* Skill tag hover effects */
  span:hover {
    transform: translateY(-2px);
  }
  
  @media (prefers-reduced-motion: reduce) {
    .group {
      animation: none;
      opacity: 1;
      transform: none;
    }
  }
</style>
